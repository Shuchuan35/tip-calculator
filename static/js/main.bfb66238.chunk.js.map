{"version":3,"sources":["components/Bill.js","components/Tip.js","components/NumberOfPeople.js","components/BillTotal.js","App.js","serviceWorker.js","index.js"],"names":["Bill","_ref","onBillChange","react_default","a","createElement","className","type","placeholder","onChange","Tip","tip","onTipChange","percentUpClick","percentDownClick","onClick","value","NumberOfPeople","numberOfPeople","onNumberOfPeopleChange","handleNumUpClick","handleNumDnClick","BillTotal","billTotal","isSplit","App","state","bill","e","billAmount","target","_this","setState","tipPercent","num","preventDefault","counter","numberUpClick","numberDnClick","_this$state","this","tipAmount","Number","parseFloat","parseInt","isBillSplit","components_Bill","components_Tip","components_NumberOfPeople","components_BillTotal","toFixed","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfb66238.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Bill = ({onBillChange}) => {\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <p>Bill</p>\r\n            <input \r\n                className='input-box form-control'\r\n                type='text' \r\n                placeholder='enter bill $0.00'\r\n                onChange={onBillChange}\r\n                >\r\n            </input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Bill;","import React from 'react';\r\n\r\nconst Tip = ({ tip, onTipChange, percentUpClick, percentDownClick }) => (\r\n    <div >\r\n        <p>Tip %</p>\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <button \r\n                    className=\"btn btn-outline-secondary\" \r\n                    type=\"button\" \r\n                    onClick={percentDownClick}\r\n                ><i className=\"fa fa-minus\"></i>\r\n                </button>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control input-box\"\r\n                placeholder=\"Tip %\"\r\n                value={tip}\r\n                onChange={onTipChange}\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <button \r\n                    className=\"btn btn-outline-secondary\" \r\n                    type=\"button\" \r\n                    onClick={percentUpClick}\r\n                ><i className=\"fa fa-plus\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default Tip;","import React from 'react';\r\n\r\nconst NumberOfPeople = ({ numberOfPeople, onNumberOfPeopleChange, handleNumUpClick, handleNumDnClick }) => (\r\n    <div>\r\n        <p>Split / Number of People</p>\r\n        <div className=\"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <button \r\n                    className=\"btn btn-outline-secondary\" \r\n                    type=\"button\" \r\n                    onClick={handleNumDnClick}\r\n                ><i className=\"fa fa-minus\"></i>\r\n                </button>\r\n            </div>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control input-box\"\r\n                placeholder=\"Number of People\"\r\n                value={numberOfPeople}\r\n                onChange={onNumberOfPeopleChange}\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <button \r\n                    className=\"btn btn-outline-secondary\" \r\n                    type=\"button\" \r\n                    onClick={handleNumUpClick}\r\n                ><i className=\"fa fa-plus\"></i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default NumberOfPeople;","import React from 'react';\r\n\r\nconst BillTotal = ({ tip, billTotal, isSplit }) => {\r\n    if (!isSplit) {\r\n        return (\r\n            <div className='bill-total'>\r\n                <p>Tip <span>${tip}</span></p>\r\n                <p>Total <span>${billTotal}</span></p>\r\n            </div>\r\n        )\r\n    } else {\r\n        // indicates tip/total is per person if split\r\n        return (\r\n            <div className='bill-total'>\r\n                <p>Tip <small>(per person)</small> <span>${tip}</span></p>\r\n                <p>Total <small>(per person)</small> <span>${billTotal}</span></p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BillTotal;","import React, { Component } from 'react';\nimport Bill from './components/Bill';\nimport Tip from './components/Tip';\nimport NumberOfPeoplle from './components/NumberOfPeople';\nimport BillTotal from './components/BillTotal';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    bill: 0,\n    tip: 15,\n    numberOfPeople: 1\n  }\n\n  onBillChange = e => {\n    const billAmount = !e.target.value ? 0 : e.target.value;\n    this.setState({ bill: billAmount });\n  }\n\n  onTipChange = e => {\n    // restrict the user input for tip between 0 - 100 %\n    const tipPercent = e.target.value <= 0 ? 0 : e.target.value >= 100 ? 100 : e.target.value;\n    this.setState({ tip: tipPercent });\n  }\n\n  onNumberOfPeopleChange = e => {\n    // restrict the user input for split between 1 - 100 people\n    const num = e.target.value <= 1 ? 1 : e.target.value >= 100 ? 100 : e.target.value;\n\n    this.setState({ \n      numberOfPeople: num\n    });\n  }\n\n  percentUpClick = e => {\n    e.preventDefault();\n    let counter = this.state.tip;\n    counter++;\n    counter = counter >= 100 ? 100 : counter;\n    this.setState({ tip: counter });\n  }\n\n  percentDownClick = e => {\n    e.preventDefault();\n    let counter = this.state.tip;\n    counter--;\n    counter = counter <=0 ? 0 : counter;\n    this.setState({ tip: counter });\n  }\n\n  numberUpClick = e => {\n    e.preventDefault();\n    let counter = this.state.numberOfPeople;\n    counter++;\n    counter = counter >= 100 ? 100 : counter;\n    this.setState({ numberOfPeople: counter });\n  }\n\n  numberDnClick = e => {\n    e.preventDefault();\n    let counter = this.state.numberOfPeople;\n    counter--;\n    counter = counter <=1 ? 1 : counter;\n    this.setState({ numberOfPeople: counter });\n  }\n\n  render() {\n    const { bill, tip, numberOfPeople } = this.state;\n    let tipAmount = Number.parseFloat(bill) * Number.parseInt(tip) / 100;\n    let billTotal = Number.parseFloat(bill) + Number.parseFloat(tipAmount);\n    let isBillSplit = false;\n    \n    if (numberOfPeople !== 1) {\n      tipAmount = tipAmount / Number.parseInt(numberOfPeople);\n      billTotal = billTotal / Number.parseInt(numberOfPeople);\n      isBillSplit = true;\n    }\n\n    return (\n      <div className=\"App\">\n        <h2>Tip Calculator</h2>\n        <Bill\n          onBillChange={this.onBillChange}\n        />\n        <Tip\n          tip={tip}\n          onTipChange={this.onTipChange}\n          percentUpClick={this.percentUpClick}\n          percentDownClick={this.percentDownClick}\n        />\n        <NumberOfPeoplle\n          numberOfPeople={numberOfPeople}\n          onNumberOfPeopleChange={this.onNumberOfPeopleChange}\n          handleNumUpClick={this.numberUpClick}\n          handleNumDnClick={this.numberDnClick}\n        />\n        <BillTotal\n          tip={tipAmount.toFixed(2)}\n          isSplit={isBillSplit}\n          billTotal={billTotal.toFixed(2)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}